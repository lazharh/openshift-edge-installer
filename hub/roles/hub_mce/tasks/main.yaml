# this allows the Baremetal Operator to boot and manage hosts for other clusters
# it also enables the operator on SNO clusters, where it is off by default
- name: Configure Baremetal Operator
  kubernetes.core.k8s:
    definition:
      apiVersion: metal3.io/v1alpha1
      kind: Provisioning
      metadata:
        name: provisioning-configuration
      spec:
        watchAllNamespaces: true
        provisioningNetwork: "Disabled"
    state: present

- name: Install MCE Operator
  block:
    - name: Create namespace
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: multicluster-engine
        state: present

    - name: Check for existing OperatorGroup
      kubernetes.core.k8s_info:
        api_version: operators.coreos.com/v1
        kind: OperatorGroup
        namespace: multicluster-engine
      register: operator_groups

    - name: Create OperatorGroup
      when: operator_groups.resources | length | int == 0
      kubernetes.core.k8s:
        definition:
          apiVersion: operators.coreos.com/v1
          kind: OperatorGroup
          metadata:
            name: multicluster-engine
            namespace: multicluster-engine
          spec:
            targetNamespaces:
              - multicluster-engine
        state: present

    - name: Create Subscription
      kubernetes.core.k8s:
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: multicluster-engine
            namespace: multicluster-engine
          spec:
            channel: "{{ mce_channel }}"
            installPlanApproval: Automatic
            name: multicluster-engine
            source: "{{ mce_operator_source }}"
            sourceNamespace: openshift-marketplace
        state: present
      register: create_sub

    - name: Pause for 15 seconds to let subscription settle
      when: create_sub.changed
      ansible.builtin.pause:
        seconds: 15

    - name: Wait for operator to be deployed
      kubernetes.core.k8s_info:
        api_version: operators.coreos.com/v1alpha1
        kind: Subscription
        name: multicluster-engine
        namespace: multicluster-engine
      register: subscription
      until: subscription.resources[0]["status"]["state"] == "AtLatestKnown"
      retries: 20
      delay: 10

    - name: Pause for 15 seconds to let CSV settle
      when: create_sub.changed
      ansible.builtin.pause:
        seconds: 15

    - name: Wait for CSV to be deployed
      kubernetes.core.k8s_info:
        api_version: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        name: "{{ subscription.resources[0]['status']['installedCSV'] }}"
        namespace: multicluster-engine
      register: csv
      until: csv.resources[0]["status"]["phase"] == "Succeeded"
      retries: 20
      delay: 10

    - name: Create MCE
      kubernetes.core.k8s:
        definition:
          apiVersion: multicluster.openshift.io/v1
          kind: MultiClusterEngine
          metadata:
            name: multiclusterengine
          spec: {}
        state: present
      register: create_mce

    - name: Pause for 15 seconds to let MCE settle
      ansible.builtin.pause:
        seconds: 15
      when: create_mce.changed

    - name: Wait for MCE to be deployed
      kubernetes.core.k8s_info:
        api_version: multicluster.openshift.io/v1
        kind: MultiClusterEngine
        name: multiclusterengine
      register: mce
      until: mce.resources[0]["status"]["phase"] == "Available"
      retries: 20
      delay: 10

    # this config map is referenced by the AgentServiceConfig, these mirror settings are copied to the spoke clusters
    - name: Create mirror registry config map for spoke
      when: mirror_url is defined
      kubernetes.core.k8s:
        template: mirror-cm.yaml.j2
        state: present

    # see https://github.com/openshift/assisted-service/pull/2747
    - name: Configure Assisted Service to use mirror registry
      when: mirror_url is defined
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: assisted-service-config
            namespace: multicluster-engine
          data:
            PUBLIC_CONTAINER_REGISTRIES: "quay.io,registry.svc.ci.openshift.org,registry.redhat.io"
        state: present

    - name: Configure Assisted Service
      kubernetes.core.k8s:
        template: AgentServiceConfig.yaml.j2
        state: present
        wait: true
        wait_condition:
          type: DeploymentsHealthy
          status: "True"
        wait_timeout: 1200
  rescue:
    - name: Delete Assisted Service
      kubernetes.core.k8s:
        definition:
          apiVersion: agent-install.openshift.io/v1beta1
          kind: AgentServiceConfig
          metadata:
            name: agent
        state: absent
        wait: true
        wait_timeout: 1200
      ignore_errors: true # noqa ignore-errors

    - name: Delete MCE
      kubernetes.core.k8s:
        definition:
          apiVersion: multicluster.openshift.io/v1
          kind: MultiClusterEngine
          metadata:
            name: multiclusterengine
        state: absent
        wait: true
        wait_timeout: 1200
      ignore_errors: true # noqa ignore-errors

    - name: Delete namespace
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: multicluster-engine
        state: absent
        wait: true
        wait_timeout: 1200
